---
apiVersion: hive.stackable.tech/v1alpha1
kind: HiveCluster
metadata:
  name: simple-hive-derby
spec:
  version: 2.3.9
  metastore:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
        config:
          database:
            connString: jdbc:derby:;databaseName=/stackable/metastore_db;create=true
            user: APP
            password: mine
            dbType: derby
          s3Connection:
            endPoint: changeme
            accessKey: changeme
            secretKey: changeme
            sslEnabled: false
            pathStyleAccess: true
---
apiVersion: opa.stackable.tech/v1alpha1
kind: OpaCluster
metadata:
  name: simple-opa
spec:
  version: "0.27.1"
  servers:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
---
apiVersion: v1
kind: Secret
metadata:
  name: simple-trino-users-secret
type: kubernetes.io/opaque
stringData:
  # admin:admin
  admin: $2y$10$89xReovvDLacVzRGpjOyAOONnayOgDAyIS2nW9bs5DJT98q17Dy5i
  # alice:alice
  alice: $2y$10$HcCa4k9v2DRrD/g7e5vEz.Bk.1xg00YTEHOZjPX7oK3KqMSt2xT8W
  # bob:bob
  bob: $2y$10$xVRXtYZnYuQu66SmruijPO8WHFM/UK5QPHTr.Nzf4JMcZSqt3W.2.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-trino-opa-bundle
  labels:
    opa.stackable.tech/bundle: "trino"
data:
  trino.rego: |
    package trino

    users = {
      "admin": {
        "schemas": {
          "read": true,
          "write": true
        },
        "tables":{
          "iris_parquet": {
            "read": true,
            "write": true
          }
        }
      },
      "bob": {
        "schemas": {
          "read": true,
          "write": false
        },
        "tables": {
          "iris_parquet": {
            "read": false,
            "write": null
          }
        }
      }
    }

    can_access_table {
      user_can_read_table
    }

    can_create_table {
      user_can_write_table
    }

    can_drop_table {
      user_can_write_table
    }

    can_show_tables {
      user_can_read_table
    }

    can_access_schema {
      user_can_read_schema
    }

    can_create_schema {
      user_can_write_schema
    }

    can_drop_schema {
      user_can_write_schema
    }

    can_show_schemas {
      user_can_read_schema
    }

    can_access_catalog {
      is_valid_user
    }

    can_execute_query {
      is_valid_user
    }

    can_select_from_columns {
      is_valid_user
      can_access_table
    }

    can_view_query_owned_by {
      is_valid_user
    }

    user_can_read_table {
      users[input.user.name].tables[input.request.table.table].read == true
    }

    user_can_write_table {
      users[input.user.name].tables[input.request.table.table].write == true
    }

    user_can_read_schema {
      users[input.user.name].schemas.read == true
    }

    user_can_write_schema {
      users[input.user.name].schemas.write == true
    }

    is_valid_user {
      _ = users[input.user.name]
    }
---
apiVersion: trino.stackable.tech/v1alpha1
kind: TrinoCluster
metadata:
  name: simple-trino
spec:
  version: "0.0.362"
  hiveConfigMapName: simple-hive-derby
  opa:
    configMapName: simple-opa
    package: trino
  authentication:
    method:
      multiUser:
        userCredentialsSecret:
          namespace: default
          name: simple-trino-users-secret
  s3:
    endPoint: changeme
    accessKey: changeme
    secretKey: changeme
    sslEnabled: false
    pathStyleAccess: true
  coordinators:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
        config: {}
  workers:
    roleGroups:
      default:
        selector:
          matchLabels:
            kubernetes.io/os: linux
        replicas: 1
        config: {}
