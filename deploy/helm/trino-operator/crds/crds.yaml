---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: trinoclusters.trino.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: trino.stackable.tech
  names:
    categories: []
    kind: TrinoCluster
    plural: trinoclusters
    shortNames:
      - trino
    singular: trinocluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for TrinoClusterSpec via `CustomResource`
          properties:
            spec:
              description: A Trino cluster stacklet. This resource is managed by the Stackable operator for Trino. Find more information on how to use it and the resources that the operator generates in the [operator documentation](https://docs.stackable.tech/home/nightly/trino/).
              properties:
                clusterConfig:
                  description: Settings that affect all roles and role groups. The settings in the `clusterConfig` are cluster wide settings that do not need to be configurable at role or role group level.
                  properties:
                    authentication:
                      default: []
                      description: Authentication options for Trino. Learn more in the [Trino authentication usage guide](https://docs.stackable.tech/home/nightly/trino/usage-guide/security#authentication).
                      items:
                        properties:
                          authenticationClass:
                            description: Name of the [AuthenticationClass](https://docs.stackable.tech/home/nightly/concepts/authentication) used to authenticate users
                            type: string
                          oidc:
                            description: This field contains OIDC-specific configuration. It is only required in case OIDC is used.
                            nullable: true
                            properties:
                              clientCredentialsSecret:
                                description: A reference to the OIDC client credentials secret. The secret contains the client id and secret.
                                type: string
                              extraScopes:
                                default: []
                                description: An optional list of extra scopes which get merged with the scopes defined in the AuthenticationClass
                                items:
                                  type: string
                                type: array
                            required:
                              - clientCredentialsSecret
                            type: object
                        required:
                          - authenticationClass
                        type: object
                      type: array
                    authorization:
                      description: Authorization options for Trino. Learn more in the [Trino authorization usage guide](https://docs.stackable.tech/home/nightly/trino/usage-guide/security#authorization).
                      nullable: true
                      properties:
                        opa:
                          description: Configure the OPA stacklet [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) and the name of the Rego package containing your authorization rules. Consult the [OPA authorization documentation](https://docs.stackable.tech/home/nightly/concepts/opa) to learn how to deploy Rego authorization rules with OPA.
                          nullable: true
                          properties:
                            configMapName:
                              description: The [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) for the OPA stacklet that should be used for authorization requests.
                              type: string
                            package:
                              description: The name of the Rego package containing the Rego rules for the product.
                              nullable: true
                              type: string
                          required:
                            - configMapName
                          type: object
                      type: object
                    catalogLabelSelector:
                      description: '[LabelSelector](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors) selecting the Catalogs to include in the Trino instance.'
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                    clientProtocol:
                      description: Client spooling protocol configuration.
                      nullable: true
                      oneOf:
                        - required:
                            - spooling
                      properties:
                        spooling:
                          properties:
                            filesystem:
                              oneOf:
                                - required:
                                    - s3
                              properties:
                                s3:
                                  properties:
                                    connection:
                                      oneOf:
                                        - required:
                                            - inline
                                        - required:
                                            - reference
                                      properties:
                                        inline:
                                          description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/nightly/concepts/s3).
                                          properties:
                                            accessStyle:
                                              default: VirtualHosted
                                              description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                              enum:
                                                - Path
                                                - VirtualHosted
                                              type: string
                                            credentials:
                                              description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                              nullable: true
                                              properties:
                                                scope:
                                                  description: '[Scope](https://docs.stackable.tech/home/nightly/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass).'
                                                  nullable: true
                                                  properties:
                                                    listenerVolumes:
                                                      default: []
                                                      description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                                      items:
                                                        type: string
                                                      type: array
                                                    node:
                                                      default: false
                                                      description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                                      type: boolean
                                                    pod:
                                                      default: false
                                                      description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                                      type: boolean
                                                    services:
                                                      default: []
                                                      description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                secretClass:
                                                  description: '[SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) containing the LDAP bind credentials.'
                                                  type: string
                                              required:
                                                - secretClass
                                              type: object
                                            host:
                                              description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                              type: string
                                            port:
                                              description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                              format: uint16
                                              minimum: 0.0
                                              nullable: true
                                              type: integer
                                            region:
                                              default:
                                                name: us-east-1
                                              description: |-
                                                Bucket region used for signing headers (sigv4).

                                                This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                                WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                              properties:
                                                name:
                                                  default: us-east-1
                                                  type: string
                                              type: object
                                            tls:
                                              description: Use a TLS connection. If not specified no TLS will be used.
                                              nullable: true
                                              properties:
                                                verification:
                                                  description: The verification method used to verify the certificates of the server and/or the client.
                                                  oneOf:
                                                    - required:
                                                        - none
                                                    - required:
                                                        - server
                                                  properties:
                                                    none:
                                                      description: Use TLS but don't verify certificates.
                                                      type: object
                                                    server:
                                                      description: Use TLS and a CA certificate to verify the server.
                                                      properties:
                                                        caCert:
                                                          description: CA cert to verify the server.
                                                          oneOf:
                                                            - required:
                                                                - webPki
                                                            - required:
                                                                - secretClass
                                                          properties:
                                                            secretClass:
                                                              description: Name of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                              type: string
                                                            webPki:
                                                              description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                              type: object
                                                          type: object
                                                      required:
                                                        - caCert
                                                      type: object
                                                  type: object
                                              required:
                                                - verification
                                              type: object
                                          required:
                                            - host
                                          type: object
                                        reference:
                                          type: string
                                      type: object
                                  required:
                                    - connection
                                  type: object
                              type: object
                            location:
                              type: string
                          required:
                            - filesystem
                            - location
                          type: object
                      type: object
                    faultTolerantExecution:
                      description: Fault tolerant execution configuration. When enabled, Trino can automatically retry queries or tasks in case of failures.
                      nullable: true
                      oneOf:
                        - required:
                            - query
                        - required:
                            - task
                      properties:
                        query:
                          description: Query-level fault tolerant execution. Retries entire queries on failure.
                          properties:
                            exchangeDeduplicationBufferSize:
                              description: Data size of the coordinator's in-memory buffer used to store output of query stages.
                              nullable: true
                              type: string
                            exchangeManager:
                              description: Exchange manager configuration for spooling intermediate data during fault tolerant execution. Optional for Query retry policy, recommended for large result sets.
                              nullable: true
                              oneOf:
                                - required:
                                    - s3
                                - required:
                                    - hdfs
                                - required:
                                    - local
                              properties:
                                encryptionEnabled:
                                  description: Whether to enable encryption of spooling data.
                                  nullable: true
                                  type: boolean
                                hdfs:
                                  description: HDFS-based exchange manager.
                                  properties:
                                    baseDirectories:
                                      description: HDFS URIs for spooling data.
                                      items:
                                        type: string
                                      type: array
                                    blockSize:
                                      description: Block data size for HDFS storage.
                                      nullable: true
                                      type: string
                                    hdfs:
                                      description: HDFS connection configuration.
                                      properties:
                                        configMap:
                                          description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the HDFS cluster.
                                          type: string
                                      required:
                                        - configMap
                                      type: object
                                    skipDirectorySchemeValidation:
                                      description: Skip directory scheme validation to support Hadoop-compatible file systems.
                                      nullable: true
                                      type: boolean
                                  required:
                                    - baseDirectories
                                    - hdfs
                                  type: object
                                local:
                                  description: Local filesystem storage (not recommended for production).
                                  properties:
                                    baseDirectories:
                                      description: Local filesystem paths for exchange storage.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - baseDirectories
                                  type: object
                                s3:
                                  description: S3-compatible storage configuration.
                                  properties:
                                    baseDirectories:
                                      description: S3 bucket URIs for spooling data (e.g., s3://bucket1,s3://bucket2).
                                      items:
                                        type: string
                                      type: array
                                    connection:
                                      description: S3 connection configuration. Learn more about S3 configuration in the [S3 concept docs](https://docs.stackable.tech/home/nightly/concepts/s3).
                                      oneOf:
                                        - required:
                                            - inline
                                        - required:
                                            - reference
                                      properties:
                                        inline:
                                          description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/nightly/concepts/s3).
                                          properties:
                                            accessStyle:
                                              default: VirtualHosted
                                              description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                              enum:
                                                - Path
                                                - VirtualHosted
                                              type: string
                                            credentials:
                                              description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                              nullable: true
                                              properties:
                                                scope:
                                                  description: '[Scope](https://docs.stackable.tech/home/nightly/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass).'
                                                  nullable: true
                                                  properties:
                                                    listenerVolumes:
                                                      default: []
                                                      description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                                      items:
                                                        type: string
                                                      type: array
                                                    node:
                                                      default: false
                                                      description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                                      type: boolean
                                                    pod:
                                                      default: false
                                                      description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                                      type: boolean
                                                    services:
                                                      default: []
                                                      description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                secretClass:
                                                  description: '[SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) containing the LDAP bind credentials.'
                                                  type: string
                                              required:
                                                - secretClass
                                              type: object
                                            host:
                                              description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                              type: string
                                            port:
                                              description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                              format: uint16
                                              minimum: 0.0
                                              nullable: true
                                              type: integer
                                            region:
                                              default:
                                                name: us-east-1
                                              description: |-
                                                Bucket region used for signing headers (sigv4).

                                                This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                                WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                              properties:
                                                name:
                                                  default: us-east-1
                                                  type: string
                                              type: object
                                            tls:
                                              description: Use a TLS connection. If not specified no TLS will be used.
                                              nullable: true
                                              properties:
                                                verification:
                                                  description: The verification method used to verify the certificates of the server and/or the client.
                                                  oneOf:
                                                    - required:
                                                        - none
                                                    - required:
                                                        - server
                                                  properties:
                                                    none:
                                                      description: Use TLS but don't verify certificates.
                                                      type: object
                                                    server:
                                                      description: Use TLS and a CA certificate to verify the server.
                                                      properties:
                                                        caCert:
                                                          description: CA cert to verify the server.
                                                          oneOf:
                                                            - required:
                                                                - webPki
                                                            - required:
                                                                - secretClass
                                                          properties:
                                                            secretClass:
                                                              description: Name of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                              type: string
                                                            webPki:
                                                              description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                              type: object
                                                          type: object
                                                      required:
                                                        - caCert
                                                      type: object
                                                  type: object
                                              required:
                                                - verification
                                              type: object
                                          required:
                                            - host
                                          type: object
                                        reference:
                                          type: string
                                      type: object
                                    maxErrorRetries:
                                      description: Maximum number of times the S3 client should retry a request.
                                      format: uint32
                                      minimum: 0.0
                                      nullable: true
                                      type: integer
                                    uploadPartSize:
                                      description: Part data size for S3 multi-part upload.
                                      nullable: true
                                      type: string
                                  required:
                                    - baseDirectories
                                    - connection
                                  type: object
                                sinkBufferPoolMinSize:
                                  description: The minimum buffer pool size for an exchange sink. The larger the buffer pool size, the larger the write parallelism and memory usage.
                                  format: uint32
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                sinkBuffersPerPartition:
                                  description: The number of buffers per partition in the buffer pool. The larger the buffer pool size, the larger the write parallelism and memory usage.
                                  format: uint32
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                sinkMaxFileSize:
                                  description: Max data size of files written by exchange sinks.
                                  nullable: true
                                  type: string
                                sourceConcurrentReaders:
                                  description: Number of concurrent readers to read from spooling storage. The larger the number of concurrent readers, the larger the read parallelism and memory usage.
                                  format: uint32
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                              type: object
                            retryAttempts:
                              description: Maximum number of times Trino may attempt to retry a query before declaring it failed.
                              format: uint32
                              minimum: 0.0
                              nullable: true
                              type: integer
                            retryDelayScaleFactor:
                              description: Factor by which retry delay is increased on each query failure.
                              format: float
                              nullable: true
                              type: number
                            retryInitialDelay:
                              description: Minimum time that a failed query must wait before it is retried.
                              nullable: true
                              type: string
                            retryMaxDelay:
                              description: Maximum time that a failed query must wait before it is retried.
                              nullable: true
                              type: string
                          type: object
                        task:
                          description: Task-level fault tolerant execution. Retries individual tasks on failure (requires exchange manager).
                          properties:
                            exchangeDeduplicationBufferSize:
                              description: Data size of the coordinator's in-memory buffer used to store output of query stages.
                              nullable: true
                              type: string
                            exchangeManager:
                              description: Exchange manager configuration for spooling intermediate data during fault tolerant execution. Required for Task retry policy.
                              oneOf:
                                - required:
                                    - s3
                                - required:
                                    - hdfs
                                - required:
                                    - local
                              properties:
                                encryptionEnabled:
                                  description: Whether to enable encryption of spooling data.
                                  nullable: true
                                  type: boolean
                                hdfs:
                                  description: HDFS-based exchange manager.
                                  properties:
                                    baseDirectories:
                                      description: HDFS URIs for spooling data.
                                      items:
                                        type: string
                                      type: array
                                    blockSize:
                                      description: Block data size for HDFS storage.
                                      nullable: true
                                      type: string
                                    hdfs:
                                      description: HDFS connection configuration.
                                      properties:
                                        configMap:
                                          description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the HDFS cluster.
                                          type: string
                                      required:
                                        - configMap
                                      type: object
                                    skipDirectorySchemeValidation:
                                      description: Skip directory scheme validation to support Hadoop-compatible file systems.
                                      nullable: true
                                      type: boolean
                                  required:
                                    - baseDirectories
                                    - hdfs
                                  type: object
                                local:
                                  description: Local filesystem storage (not recommended for production).
                                  properties:
                                    baseDirectories:
                                      description: Local filesystem paths for exchange storage.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - baseDirectories
                                  type: object
                                s3:
                                  description: S3-compatible storage configuration.
                                  properties:
                                    baseDirectories:
                                      description: S3 bucket URIs for spooling data (e.g., s3://bucket1,s3://bucket2).
                                      items:
                                        type: string
                                      type: array
                                    connection:
                                      description: S3 connection configuration. Learn more about S3 configuration in the [S3 concept docs](https://docs.stackable.tech/home/nightly/concepts/s3).
                                      oneOf:
                                        - required:
                                            - inline
                                        - required:
                                            - reference
                                      properties:
                                        inline:
                                          description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/nightly/concepts/s3).
                                          properties:
                                            accessStyle:
                                              default: VirtualHosted
                                              description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                              enum:
                                                - Path
                                                - VirtualHosted
                                              type: string
                                            credentials:
                                              description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                              nullable: true
                                              properties:
                                                scope:
                                                  description: '[Scope](https://docs.stackable.tech/home/nightly/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass).'
                                                  nullable: true
                                                  properties:
                                                    listenerVolumes:
                                                      default: []
                                                      description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                                      items:
                                                        type: string
                                                      type: array
                                                    node:
                                                      default: false
                                                      description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                                      type: boolean
                                                    pod:
                                                      default: false
                                                      description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                                      type: boolean
                                                    services:
                                                      default: []
                                                      description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                secretClass:
                                                  description: '[SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) containing the LDAP bind credentials.'
                                                  type: string
                                              required:
                                                - secretClass
                                              type: object
                                            host:
                                              description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                              type: string
                                            port:
                                              description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                              format: uint16
                                              minimum: 0.0
                                              nullable: true
                                              type: integer
                                            region:
                                              default:
                                                name: us-east-1
                                              description: |-
                                                Bucket region used for signing headers (sigv4).

                                                This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                                WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                              properties:
                                                name:
                                                  default: us-east-1
                                                  type: string
                                              type: object
                                            tls:
                                              description: Use a TLS connection. If not specified no TLS will be used.
                                              nullable: true
                                              properties:
                                                verification:
                                                  description: The verification method used to verify the certificates of the server and/or the client.
                                                  oneOf:
                                                    - required:
                                                        - none
                                                    - required:
                                                        - server
                                                  properties:
                                                    none:
                                                      description: Use TLS but don't verify certificates.
                                                      type: object
                                                    server:
                                                      description: Use TLS and a CA certificate to verify the server.
                                                      properties:
                                                        caCert:
                                                          description: CA cert to verify the server.
                                                          oneOf:
                                                            - required:
                                                                - webPki
                                                            - required:
                                                                - secretClass
                                                          properties:
                                                            secretClass:
                                                              description: Name of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                              type: string
                                                            webPki:
                                                              description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                              type: object
                                                          type: object
                                                      required:
                                                        - caCert
                                                      type: object
                                                  type: object
                                              required:
                                                - verification
                                              type: object
                                          required:
                                            - host
                                          type: object
                                        reference:
                                          type: string
                                      type: object
                                    maxErrorRetries:
                                      description: Maximum number of times the S3 client should retry a request.
                                      format: uint32
                                      minimum: 0.0
                                      nullable: true
                                      type: integer
                                    uploadPartSize:
                                      description: Part data size for S3 multi-part upload.
                                      nullable: true
                                      type: string
                                  required:
                                    - baseDirectories
                                    - connection
                                  type: object
                                sinkBufferPoolMinSize:
                                  description: The minimum buffer pool size for an exchange sink. The larger the buffer pool size, the larger the write parallelism and memory usage.
                                  format: uint32
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                sinkBuffersPerPartition:
                                  description: The number of buffers per partition in the buffer pool. The larger the buffer pool size, the larger the write parallelism and memory usage.
                                  format: uint32
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                sinkMaxFileSize:
                                  description: Max data size of files written by exchange sinks.
                                  nullable: true
                                  type: string
                                sourceConcurrentReaders:
                                  description: Number of concurrent readers to read from spooling storage. The larger the number of concurrent readers, the larger the read parallelism and memory usage.
                                  format: uint32
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                              type: object
                            retryAttemptsPerTask:
                              description: Maximum number of times Trino may attempt to retry a single task before declaring the query failed.
                              format: uint32
                              minimum: 0.0
                              nullable: true
                              type: integer
                            retryDelayScaleFactor:
                              description: Factor by which retry delay is increased on each task failure.
                              format: float
                              nullable: true
                              type: number
                            retryInitialDelay:
                              description: Minimum time that a failed task must wait before it is retried.
                              nullable: true
                              type: string
                            retryMaxDelay:
                              description: Maximum time that a failed task must wait before it is retried.
                              nullable: true
                              type: string
                          required:
                            - exchangeManager
                          type: object
                      type: object
                    tls:
                      default:
                        internalSecretClass: tls
                        serverSecretClass: tls
                      description: TLS configuration options for server and internal communication.
                      properties:
                        internalSecretClass:
                          default: tls
                          description: 'Only affects internal communication. Use mutual verification between Trino nodes This setting controls: - Which cert the servers should use to authenticate themselves against other servers - Which ca.crt to use when validating the other server'
                          nullable: true
                          type: string
                        serverSecretClass:
                          default: tls
                          description: 'Only affects client connections. This setting controls: - If TLS encryption is used at all - Which cert the servers should use to authenticate themselves against the client'
                          nullable: true
                          type: string
                      type: object
                    vectorAggregatorConfigMapName:
                      description: Name of the Vector aggregator [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery). It must contain the key `ADDRESS` with the address of the Vector aggregator. Follow the [logging tutorial](https://docs.stackable.tech/home/nightly/tutorials/logging-vector-aggregator) to learn how to configure log aggregation with Vector.
                      nullable: true
                      type: string
                  required:
                    - catalogLabelSelector
                  type: object
                clusterOperation:
                  default:
                    reconciliationPaused: false
                    stopped: false
                  description: '[Cluster operations](https://docs.stackable.tech/home/nightly/concepts/operations/cluster_operations) properties, allow stopping the product instance as well as pausing reconciliation.'
                  properties:
                    reconciliationPaused:
                      default: false
                      description: Flag to stop cluster reconciliation by the operator. This means that all changes in the custom resource spec are ignored until this flag is set to false or removed. The operator will however still watch the deployed resources at the time and update the custom resource status field. If applied at the same time with `stopped`, `reconciliationPaused` will take precedence over `stopped` and stop the reconciliation immediately.
                      type: boolean
                    stopped:
                      default: false
                      description: Flag to stop the cluster. This means all deployed resources (e.g. Services, StatefulSets, ConfigMaps) are kept but all deployed Pods (e.g. replicas from a StatefulSet) are scaled to 0 and therefore stopped and removed. If applied at the same time with `reconciliationPaused`, the latter will pause reconciliation and `stopped` will take no effect until `reconciliationPaused` is set to false or removed.
                      type: boolean
                  type: object
                coordinators:
                  description: This struct represents a role - e.g. HDFS datanodes or Trino workers. It has a key-value-map containing all the roleGroups that are part of this role. Additionally, there is a `config`, which is configurable at the role *and* roleGroup level. Everything at roleGroup level is merged on top of what is configured on role level. There is also a second form of config, which can only be configured at role level, the `roleConfig`. You can learn more about this in the [Roles and role group concept documentation](https://docs.stackable.tech/home/nightly/concepts/roles-and-role-groups).
                  nullable: true
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        affinity:
                          default:
                            nodeAffinity: null
                            nodeSelector: null
                            podAffinity: null
                            podAntiAffinity: null
                          description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/nightly/concepts/operations/pod_placement).
                          properties:
                            nodeAffinity:
                              description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                            podAffinity:
                              description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            podAntiAffinity:
                              description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        gracefulShutdownTimeout:
                          description: Time period Pods have to gracefully shut down, e.g. `30m`, `1h` or `2d`. Consult the operator documentation for details.
                          nullable: true
                          type: string
                        logging:
                          default:
                            containers: {}
                            enableVectorAgent: null
                          description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/nightly/concepts/logging).
                          properties:
                            containers:
                              additionalProperties:
                                anyOf:
                                  - required:
                                      - custom
                                  - {}
                                description: Log configuration of the container
                                properties:
                                  console:
                                    description: Configuration for the console appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  custom:
                                    description: Custom log configuration provided in a ConfigMap
                                    properties:
                                      configMap:
                                        description: ConfigMap containing the log configuration files
                                        nullable: true
                                        type: string
                                    type: object
                                  file:
                                    description: Configuration for the file appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  loggers:
                                    additionalProperties:
                                      description: Configuration of a logger
                                      properties:
                                        level:
                                          description: The log level threshold. Log events with a lower log level are discarded.
                                          enum:
                                            - TRACE
                                            - DEBUG
                                            - INFO
                                            - WARN
                                            - ERROR
                                            - FATAL
                                            - NONE
                                          nullable: true
                                          type: string
                                      type: object
                                    default: {}
                                    description: Configuration per logger
                                    type: object
                                type: object
                              description: Log configuration per container.
                              type: object
                            enableVectorAgent:
                              description: Wether or not to deploy a container with the Vector log agent.
                              nullable: true
                              type: boolean
                          type: object
                        queryMaxMemory:
                          nullable: true
                          type: string
                        queryMaxMemoryPerNode:
                          nullable: true
                          type: string
                        requestedSecretLifetime:
                          description: |-
                            Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.

                            Defaults to `15d` for coordinators (as currently a restart kills all running queries) and `1d` for workers.
                          nullable: true
                          type: string
                        resources:
                          default:
                            cpu:
                              max: null
                              min: null
                            memory:
                              limit: null
                              runtimeLimits: {}
                            storage: {}
                          description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                          properties:
                            cpu:
                              default:
                                max: null
                                min: null
                              properties:
                                max:
                                  description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                                min:
                                  description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                              type: object
                            memory:
                              properties:
                                limit:
                                  description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                  nullable: true
                                  type: string
                                runtimeLimits:
                                  description: Additional options that can be specified.
                                  type: object
                              type: object
                            storage:
                              type: object
                          type: object
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                      type: object
                    jvmArgumentOverrides:
                      default:
                        add: []
                        remove: []
                        removeRegex: []
                      description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#jvm-argument-overrides) for details on the usage.
                      properties:
                        add:
                          default: []
                          description: JVM arguments to be added
                          items:
                            type: string
                          type: array
                        remove:
                          default: []
                          description: JVM arguments to be removed by exact match
                          items:
                            type: string
                          type: array
                        removeRegex:
                          default: []
                          description: JVM arguments matching any of this regexes will be removed
                          items:
                            type: string
                          type: array
                      type: object
                    podOverrides:
                      default: {}
                      description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#pod-overrides) for more information.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    roleConfig:
                      default:
                        listenerClass: cluster-internal
                        podDisruptionBudget:
                          enabled: true
                          maxUnavailable: null
                      description: This is a product-agnostic RoleConfig, which is sufficient for most of the products.
                      properties:
                        listenerClass:
                          default: cluster-internal
                          description: This field controls which [ListenerClass](https://docs.stackable.tech/home/nightly/listener-operator/listenerclass.html) is used to expose the coordinator.
                          type: string
                        podDisruptionBudget:
                          default:
                            enabled: true
                            maxUnavailable: null
                          description: |-
                            This struct is used to configure:

                            1. If PodDisruptionBudgets are created by the operator 2. The allowed number of Pods to be unavailable (`maxUnavailable`)

                            Learn more in the [allowed Pod disruptions documentation](https://docs.stackable.tech/home/nightly/concepts/operations/pod_disruptions).
                          properties:
                            enabled:
                              default: true
                              description: Whether a PodDisruptionBudget should be written out for this role. Disabling this enables you to specify your own - custom - one. Defaults to true.
                              type: boolean
                            maxUnavailable:
                              description: The number of Pods that are allowed to be down because of voluntary disruptions. If you don't explicitly set this, the operator will use a sane default based upon knowledge about the individual product.
                              format: uint16
                              minimum: 0.0
                              nullable: true
                              type: integer
                          type: object
                      type: object
                    roleGroups:
                      additionalProperties:
                        properties:
                          cliOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            type: object
                          config:
                            default: {}
                            properties:
                              affinity:
                                default:
                                  nodeAffinity: null
                                  nodeSelector: null
                                  podAffinity: null
                                  podAntiAffinity: null
                                description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/nightly/concepts/operations/pod_placement).
                                properties:
                                  nodeAffinity:
                                    description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                  podAffinity:
                                    description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  podAntiAffinity:
                                    description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              gracefulShutdownTimeout:
                                description: Time period Pods have to gracefully shut down, e.g. `30m`, `1h` or `2d`. Consult the operator documentation for details.
                                nullable: true
                                type: string
                              logging:
                                default:
                                  containers: {}
                                  enableVectorAgent: null
                                description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/nightly/concepts/logging).
                                properties:
                                  containers:
                                    additionalProperties:
                                      anyOf:
                                        - required:
                                            - custom
                                        - {}
                                      description: Log configuration of the container
                                      properties:
                                        console:
                                          description: Configuration for the console appender
                                          nullable: true
                                          properties:
                                            level:
                                              description: The log level threshold. Log events with a lower log level are discarded.
                                              enum:
                                                - TRACE
                                                - DEBUG
                                                - INFO
                                                - WARN
                                                - ERROR
                                                - FATAL
                                                - NONE
                                              nullable: true
                                              type: string
                                          type: object
                                        custom:
                                          description: Custom log configuration provided in a ConfigMap
                                          properties:
                                            configMap:
                                              description: ConfigMap containing the log configuration files
                                              nullable: true
                                              type: string
                                          type: object
                                        file:
                                          description: Configuration for the file appender
                                          nullable: true
                                          properties:
                                            level:
                                              description: The log level threshold. Log events with a lower log level are discarded.
                                              enum:
                                                - TRACE
                                                - DEBUG
                                                - INFO
                                                - WARN
                                                - ERROR
                                                - FATAL
                                                - NONE
                                              nullable: true
                                              type: string
                                          type: object
                                        loggers:
                                          additionalProperties:
                                            description: Configuration of a logger
                                            properties:
                                              level:
                                                description: The log level threshold. Log events with a lower log level are discarded.
                                                enum:
                                                  - TRACE
                                                  - DEBUG
                                                  - INFO
                                                  - WARN
                                                  - ERROR
                                                  - FATAL
                                                  - NONE
                                                nullable: true
                                                type: string
                                            type: object
                                          default: {}
                                          description: Configuration per logger
                                          type: object
                                      type: object
                                    description: Log configuration per container.
                                    type: object
                                  enableVectorAgent:
                                    description: Wether or not to deploy a container with the Vector log agent.
                                    nullable: true
                                    type: boolean
                                type: object
                              queryMaxMemory:
                                nullable: true
                                type: string
                              queryMaxMemoryPerNode:
                                nullable: true
                                type: string
                              requestedSecretLifetime:
                                description: |-
                                  Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.

                                  Defaults to `15d` for coordinators (as currently a restart kills all running queries) and `1d` for workers.
                                nullable: true
                                type: string
                              resources:
                                default:
                                  cpu:
                                    max: null
                                    min: null
                                  memory:
                                    limit: null
                                    runtimeLimits: {}
                                  storage: {}
                                description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                                properties:
                                  cpu:
                                    default:
                                      max: null
                                      min: null
                                    properties:
                                      max:
                                        description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                        nullable: true
                                        type: string
                                      min:
                                        description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                        nullable: true
                                        type: string
                                    type: object
                                  memory:
                                    properties:
                                      limit:
                                        description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                        nullable: true
                                        type: string
                                      runtimeLimits:
                                        description: Additional options that can be specified.
                                        type: object
                                    type: object
                                  storage:
                                    type: object
                                type: object
                            type: object
                          configOverrides:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            default: {}
                            description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                            type: object
                          envOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                            type: object
                          jvmArgumentOverrides:
                            default:
                              add: []
                              remove: []
                              removeRegex: []
                            description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#jvm-argument-overrides) for details on the usage.
                            properties:
                              add:
                                default: []
                                description: JVM arguments to be added
                                items:
                                  type: string
                                type: array
                              remove:
                                default: []
                                description: JVM arguments to be removed by exact match
                                items:
                                  type: string
                                type: array
                              removeRegex:
                                default: []
                                description: JVM arguments matching any of this regexes will be removed
                                items:
                                  type: string
                                type: array
                            type: object
                          podOverrides:
                            default: {}
                            description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#pod-overrides) for more information.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          replicas:
                            format: uint16
                            minimum: 0.0
                            nullable: true
                            type: integer
                        type: object
                      type: object
                  required:
                    - roleGroups
                  type: object
                image:
                  anyOf:
                    - required:
                        - custom
                        - productVersion
                    - required:
                        - productVersion
                  description: |-
                    Specify which image to use, the easiest way is to only configure the `productVersion`. You can also configure a custom image registry to pull from, as well as completely custom images.

                    Consult the [Product image selection documentation](https://docs.stackable.tech/home/nightly/concepts/product_image_selection) for details.
                  properties:
                    custom:
                      description: Overwrite the docker image. Specify the full docker image name, e.g. `oci.stackable.tech/sdp/superset:1.4.1-stackable2.1.0`
                      type: string
                    productVersion:
                      description: Version of the product, e.g. `1.4.1`.
                      type: string
                    pullPolicy:
                      default: Always
                      description: '[Pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy) used when pulling the image.'
                      enum:
                        - IfNotPresent
                        - Always
                        - Never
                      type: string
                    pullSecrets:
                      description: '[Image pull secrets](https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod) to pull images from a private registry.'
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                        required:
                          - name
                        type: object
                      nullable: true
                      type: array
                    repo:
                      description: Name of the docker repo, e.g. `oci.stackable.tech/sdp`
                      nullable: true
                      type: string
                    stackableVersion:
                      description: Stackable version of the product, e.g. `23.4`, `23.4.1` or `0.0.0-dev`. If not specified, the operator will use its own version, e.g. `23.4.1`. When using a nightly operator or a pr version, it will use the nightly `0.0.0-dev` image.
                      nullable: true
                      type: string
                  type: object
                workers:
                  description: This struct represents a role - e.g. HDFS datanodes or Trino workers. It has a key-value-map containing all the roleGroups that are part of this role. Additionally, there is a `config`, which is configurable at the role *and* roleGroup level. Everything at roleGroup level is merged on top of what is configured on role level. There is also a second form of config, which can only be configured at role level, the `roleConfig`. You can learn more about this in the [Roles and role group concept documentation](https://docs.stackable.tech/home/nightly/concepts/roles-and-role-groups).
                  nullable: true
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        affinity:
                          default:
                            nodeAffinity: null
                            nodeSelector: null
                            podAffinity: null
                            podAntiAffinity: null
                          description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/nightly/concepts/operations/pod_placement).
                          properties:
                            nodeAffinity:
                              description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                            podAffinity:
                              description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            podAntiAffinity:
                              description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        gracefulShutdownTimeout:
                          description: Time period Pods have to gracefully shut down, e.g. `30m`, `1h` or `2d`. Consult the operator documentation for details.
                          nullable: true
                          type: string
                        logging:
                          default:
                            containers: {}
                            enableVectorAgent: null
                          description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/nightly/concepts/logging).
                          properties:
                            containers:
                              additionalProperties:
                                anyOf:
                                  - required:
                                      - custom
                                  - {}
                                description: Log configuration of the container
                                properties:
                                  console:
                                    description: Configuration for the console appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  custom:
                                    description: Custom log configuration provided in a ConfigMap
                                    properties:
                                      configMap:
                                        description: ConfigMap containing the log configuration files
                                        nullable: true
                                        type: string
                                    type: object
                                  file:
                                    description: Configuration for the file appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  loggers:
                                    additionalProperties:
                                      description: Configuration of a logger
                                      properties:
                                        level:
                                          description: The log level threshold. Log events with a lower log level are discarded.
                                          enum:
                                            - TRACE
                                            - DEBUG
                                            - INFO
                                            - WARN
                                            - ERROR
                                            - FATAL
                                            - NONE
                                          nullable: true
                                          type: string
                                      type: object
                                    default: {}
                                    description: Configuration per logger
                                    type: object
                                type: object
                              description: Log configuration per container.
                              type: object
                            enableVectorAgent:
                              description: Wether or not to deploy a container with the Vector log agent.
                              nullable: true
                              type: boolean
                          type: object
                        queryMaxMemory:
                          nullable: true
                          type: string
                        queryMaxMemoryPerNode:
                          nullable: true
                          type: string
                        requestedSecretLifetime:
                          description: |-
                            Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.

                            Defaults to `15d` for coordinators (as currently a restart kills all running queries) and `1d` for workers.
                          nullable: true
                          type: string
                        resources:
                          default:
                            cpu:
                              max: null
                              min: null
                            memory:
                              limit: null
                              runtimeLimits: {}
                            storage: {}
                          description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                          properties:
                            cpu:
                              default:
                                max: null
                                min: null
                              properties:
                                max:
                                  description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                                min:
                                  description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                              type: object
                            memory:
                              properties:
                                limit:
                                  description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                  nullable: true
                                  type: string
                                runtimeLimits:
                                  description: Additional options that can be specified.
                                  type: object
                              type: object
                            storage:
                              type: object
                          type: object
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                      type: object
                    jvmArgumentOverrides:
                      default:
                        add: []
                        remove: []
                        removeRegex: []
                      description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#jvm-argument-overrides) for details on the usage.
                      properties:
                        add:
                          default: []
                          description: JVM arguments to be added
                          items:
                            type: string
                          type: array
                        remove:
                          default: []
                          description: JVM arguments to be removed by exact match
                          items:
                            type: string
                          type: array
                        removeRegex:
                          default: []
                          description: JVM arguments matching any of this regexes will be removed
                          items:
                            type: string
                          type: array
                      type: object
                    podOverrides:
                      default: {}
                      description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#pod-overrides) for more information.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    roleConfig:
                      default:
                        podDisruptionBudget:
                          enabled: true
                          maxUnavailable: null
                      description: This is a product-agnostic RoleConfig, which is sufficient for most of the products.
                      properties:
                        podDisruptionBudget:
                          default:
                            enabled: true
                            maxUnavailable: null
                          description: |-
                            This struct is used to configure:

                            1. If PodDisruptionBudgets are created by the operator 2. The allowed number of Pods to be unavailable (`maxUnavailable`)

                            Learn more in the [allowed Pod disruptions documentation](https://docs.stackable.tech/home/nightly/concepts/operations/pod_disruptions).
                          properties:
                            enabled:
                              default: true
                              description: Whether a PodDisruptionBudget should be written out for this role. Disabling this enables you to specify your own - custom - one. Defaults to true.
                              type: boolean
                            maxUnavailable:
                              description: The number of Pods that are allowed to be down because of voluntary disruptions. If you don't explicitly set this, the operator will use a sane default based upon knowledge about the individual product.
                              format: uint16
                              minimum: 0.0
                              nullable: true
                              type: integer
                          type: object
                      type: object
                    roleGroups:
                      additionalProperties:
                        properties:
                          cliOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            type: object
                          config:
                            default: {}
                            properties:
                              affinity:
                                default:
                                  nodeAffinity: null
                                  nodeSelector: null
                                  podAffinity: null
                                  podAntiAffinity: null
                                description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/nightly/concepts/operations/pod_placement).
                                properties:
                                  nodeAffinity:
                                    description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                  podAffinity:
                                    description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  podAntiAffinity:
                                    description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              gracefulShutdownTimeout:
                                description: Time period Pods have to gracefully shut down, e.g. `30m`, `1h` or `2d`. Consult the operator documentation for details.
                                nullable: true
                                type: string
                              logging:
                                default:
                                  containers: {}
                                  enableVectorAgent: null
                                description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/nightly/concepts/logging).
                                properties:
                                  containers:
                                    additionalProperties:
                                      anyOf:
                                        - required:
                                            - custom
                                        - {}
                                      description: Log configuration of the container
                                      properties:
                                        console:
                                          description: Configuration for the console appender
                                          nullable: true
                                          properties:
                                            level:
                                              description: The log level threshold. Log events with a lower log level are discarded.
                                              enum:
                                                - TRACE
                                                - DEBUG
                                                - INFO
                                                - WARN
                                                - ERROR
                                                - FATAL
                                                - NONE
                                              nullable: true
                                              type: string
                                          type: object
                                        custom:
                                          description: Custom log configuration provided in a ConfigMap
                                          properties:
                                            configMap:
                                              description: ConfigMap containing the log configuration files
                                              nullable: true
                                              type: string
                                          type: object
                                        file:
                                          description: Configuration for the file appender
                                          nullable: true
                                          properties:
                                            level:
                                              description: The log level threshold. Log events with a lower log level are discarded.
                                              enum:
                                                - TRACE
                                                - DEBUG
                                                - INFO
                                                - WARN
                                                - ERROR
                                                - FATAL
                                                - NONE
                                              nullable: true
                                              type: string
                                          type: object
                                        loggers:
                                          additionalProperties:
                                            description: Configuration of a logger
                                            properties:
                                              level:
                                                description: The log level threshold. Log events with a lower log level are discarded.
                                                enum:
                                                  - TRACE
                                                  - DEBUG
                                                  - INFO
                                                  - WARN
                                                  - ERROR
                                                  - FATAL
                                                  - NONE
                                                nullable: true
                                                type: string
                                            type: object
                                          default: {}
                                          description: Configuration per logger
                                          type: object
                                      type: object
                                    description: Log configuration per container.
                                    type: object
                                  enableVectorAgent:
                                    description: Wether or not to deploy a container with the Vector log agent.
                                    nullable: true
                                    type: boolean
                                type: object
                              queryMaxMemory:
                                nullable: true
                                type: string
                              queryMaxMemoryPerNode:
                                nullable: true
                                type: string
                              requestedSecretLifetime:
                                description: |-
                                  Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.

                                  Defaults to `15d` for coordinators (as currently a restart kills all running queries) and `1d` for workers.
                                nullable: true
                                type: string
                              resources:
                                default:
                                  cpu:
                                    max: null
                                    min: null
                                  memory:
                                    limit: null
                                    runtimeLimits: {}
                                  storage: {}
                                description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                                properties:
                                  cpu:
                                    default:
                                      max: null
                                      min: null
                                    properties:
                                      max:
                                        description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                        nullable: true
                                        type: string
                                      min:
                                        description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                        nullable: true
                                        type: string
                                    type: object
                                  memory:
                                    properties:
                                      limit:
                                        description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                        nullable: true
                                        type: string
                                      runtimeLimits:
                                        description: Additional options that can be specified.
                                        type: object
                                    type: object
                                  storage:
                                    type: object
                                type: object
                            type: object
                          configOverrides:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            default: {}
                            description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                            type: object
                          envOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                            type: object
                          jvmArgumentOverrides:
                            default:
                              add: []
                              remove: []
                              removeRegex: []
                            description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#jvm-argument-overrides) for details on the usage.
                            properties:
                              add:
                                default: []
                                description: JVM arguments to be added
                                items:
                                  type: string
                                type: array
                              remove:
                                default: []
                                description: JVM arguments to be removed by exact match
                                items:
                                  type: string
                                type: array
                              removeRegex:
                                default: []
                                description: JVM arguments matching any of this regexes will be removed
                                items:
                                  type: string
                                type: array
                            type: object
                          podOverrides:
                            default: {}
                            description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/nightly/concepts/overrides#pod-overrides) for more information.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          replicas:
                            format: uint16
                            minimum: 0.0
                            nullable: true
                            type: integer
                        type: object
                      type: object
                  required:
                    - roleGroups
                  type: object
              required:
                - clusterConfig
                - image
              type: object
            status:
              nullable: true
              properties:
                conditions:
                  default: []
                  items:
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        format: date-time
                        nullable: true
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        nullable: true
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        nullable: true
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        enum:
                          - 'True'
                          - 'False'
                          - Unknown
                        type: string
                      type:
                        description: Type of deployment condition.
                        enum:
                          - Available
                          - Degraded
                          - Progressing
                          - ReconciliationPaused
                          - Stopped
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - spec
          title: TrinoCluster
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: trinocatalogs.trino.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: trino.stackable.tech
  names:
    categories: []
    kind: TrinoCatalog
    plural: trinocatalogs
    shortNames: []
    singular: trinocatalog
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for TrinoCatalogSpec via `CustomResource`
          properties:
            spec:
              description: The TrinoCatalog resource can be used to define catalogs in Kubernetes objects. Read more about it in the [Trino operator concept docs](https://docs.stackable.tech/home/nightly/trino/concepts) and the [Trino operator usage guide](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/). The documentation also contains a list of all the supported backends.
              properties:
                configOverrides:
                  additionalProperties:
                    type: string
                  default: {}
                  description: 'The `configOverrides` allow overriding arbitrary Trino settings. For example, for Hive you could add `hive.metastore.username: trino`.'
                  type: object
                connector:
                  description: The `connector` defines which connector is used.
                  oneOf:
                    - required:
                        - blackHole
                    - required:
                        - deltaLake
                    - required:
                        - googleSheet
                    - required:
                        - generic
                    - required:
                        - hive
                    - required:
                        - iceberg
                    - required:
                        - tpcds
                    - required:
                        - tpch
                  properties:
                    blackHole:
                      description: A [Black Hole](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/black-hole) connector.
                      type: object
                    deltaLake:
                      description: An [Delta Lake](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/delta-lake) connector.
                      properties:
                        hdfs:
                          description: Connection to an HDFS cluster. Please make sure that the underlying Hive metastore also has access to the HDFS.
                          nullable: true
                          properties:
                            configMap:
                              description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the HDFS cluster.
                              type: string
                          required:
                            - configMap
                          type: object
                        metastore:
                          description: Mandatory connection to a Hive Metastore, which will be used as a storage for metadata.
                          properties:
                            configMap:
                              description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the Hive metastore.
                              type: string
                          required:
                            - configMap
                          type: object
                        s3:
                          description: Connection to an S3 store. Please make sure that the underlying Hive metastore also has access to the S3 store. Learn more about S3 configuration in the [S3 concept docs](https://docs.stackable.tech/home/nightly/concepts/s3).
                          nullable: true
                          oneOf:
                            - required:
                                - inline
                            - required:
                                - reference
                          properties:
                            inline:
                              description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/nightly/concepts/s3).
                              properties:
                                accessStyle:
                                  default: VirtualHosted
                                  description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                  enum:
                                    - Path
                                    - VirtualHosted
                                  type: string
                                credentials:
                                  description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                  nullable: true
                                  properties:
                                    scope:
                                      description: '[Scope](https://docs.stackable.tech/home/nightly/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass).'
                                      nullable: true
                                      properties:
                                        listenerVolumes:
                                          default: []
                                          description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                          items:
                                            type: string
                                          type: array
                                        node:
                                          default: false
                                          description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                          type: boolean
                                        pod:
                                          default: false
                                          description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                          type: boolean
                                        services:
                                          default: []
                                          description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    secretClass:
                                      description: '[SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) containing the LDAP bind credentials.'
                                      type: string
                                  required:
                                    - secretClass
                                  type: object
                                host:
                                  description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                  type: string
                                port:
                                  description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                  format: uint16
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                region:
                                  default:
                                    name: us-east-1
                                  description: |-
                                    Bucket region used for signing headers (sigv4).

                                    This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                    WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                  properties:
                                    name:
                                      default: us-east-1
                                      type: string
                                  type: object
                                tls:
                                  description: Use a TLS connection. If not specified no TLS will be used.
                                  nullable: true
                                  properties:
                                    verification:
                                      description: The verification method used to verify the certificates of the server and/or the client.
                                      oneOf:
                                        - required:
                                            - none
                                        - required:
                                            - server
                                      properties:
                                        none:
                                          description: Use TLS but don't verify certificates.
                                          type: object
                                        server:
                                          description: Use TLS and a CA certificate to verify the server.
                                          properties:
                                            caCert:
                                              description: CA cert to verify the server.
                                              oneOf:
                                                - required:
                                                    - webPki
                                                - required:
                                                    - secretClass
                                              properties:
                                                secretClass:
                                                  description: Name of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                  type: string
                                                webPki:
                                                  description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                  type: object
                                              type: object
                                          required:
                                            - caCert
                                          type: object
                                      type: object
                                  required:
                                    - verification
                                  type: object
                              required:
                                - host
                              type: object
                            reference:
                              type: string
                          type: object
                      required:
                        - metastore
                      type: object
                    generic:
                      description: A [generic](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/generic) connector.
                      properties:
                        connectorName:
                          description: Name of the Trino connector. Will be passed to `connector.name`.
                          type: string
                        properties:
                          additionalProperties:
                            oneOf:
                              - required:
                                  - value
                              - required:
                                  - valueFromSecret
                              - required:
                                  - valueFromConfigMap
                            properties:
                              value:
                                type: string
                              valueFromConfigMap:
                                description: Selects a key from a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or its key must be defined
                                    type: boolean
                                required:
                                  - key
                                  - name
                                type: object
                              valueFromSecret:
                                description: SecretKeySelector selects a key of a Secret.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must be a valid secret key.
                                    type: string
                                  name:
                                    description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its key must be defined
                                    type: boolean
                                required:
                                  - key
                                  - name
                                type: object
                            type: object
                          default: {}
                          description: A map of properties to put in the connector configuration file. They can be specified either as a raw value or be read from a Secret or ConfigMap.
                          type: object
                      required:
                        - connectorName
                      type: object
                    googleSheet:
                      description: A [Google sheets](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/google-sheets) connector.
                      properties:
                        cache:
                          description: Cache the contents of sheets. This is used to reduce Google Sheets API usage and latency.
                          nullable: true
                          properties:
                            sheetsDataExpireAfterWrite:
                              description: How long to cache spreadsheet data or metadata, defaults to `5m`.
                              nullable: true
                              type: string
                            sheetsDataMaxCacheSize:
                              description: Maximum number of spreadsheets to cache, defaults to 1000.
                              nullable: true
                              type: string
                          type: object
                        credentialsSecret:
                          description: The Secret containing the Google API JSON key file. The key used from the Secret is `credentials`.
                          type: string
                        metadataSheetId:
                          description: Sheet ID of the spreadsheet, that contains the table mapping.
                          type: string
                      required:
                        - credentialsSecret
                        - metadataSheetId
                      type: object
                    hive:
                      description: An [Apache Hive](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/hive) connector.
                      properties:
                        hdfs:
                          description: Connection to an HDFS cluster. Please make sure that the underlying Hive metastore also has access to the HDFS.
                          nullable: true
                          properties:
                            configMap:
                              description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the HDFS cluster.
                              type: string
                          required:
                            - configMap
                          type: object
                        metastore:
                          description: Mandatory connection to a Hive Metastore, which will be used as a storage for metadata.
                          properties:
                            configMap:
                              description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the Hive metastore.
                              type: string
                          required:
                            - configMap
                          type: object
                        s3:
                          description: Connection to an S3 store. Please make sure that the underlying Hive metastore also has access to the S3 store. Learn more about S3 configuration in the [S3 concept docs](https://docs.stackable.tech/home/nightly/concepts/s3).
                          nullable: true
                          oneOf:
                            - required:
                                - inline
                            - required:
                                - reference
                          properties:
                            inline:
                              description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/nightly/concepts/s3).
                              properties:
                                accessStyle:
                                  default: VirtualHosted
                                  description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                  enum:
                                    - Path
                                    - VirtualHosted
                                  type: string
                                credentials:
                                  description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                  nullable: true
                                  properties:
                                    scope:
                                      description: '[Scope](https://docs.stackable.tech/home/nightly/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass).'
                                      nullable: true
                                      properties:
                                        listenerVolumes:
                                          default: []
                                          description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                          items:
                                            type: string
                                          type: array
                                        node:
                                          default: false
                                          description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                          type: boolean
                                        pod:
                                          default: false
                                          description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                          type: boolean
                                        services:
                                          default: []
                                          description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    secretClass:
                                      description: '[SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) containing the LDAP bind credentials.'
                                      type: string
                                  required:
                                    - secretClass
                                  type: object
                                host:
                                  description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                  type: string
                                port:
                                  description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                  format: uint16
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                region:
                                  default:
                                    name: us-east-1
                                  description: |-
                                    Bucket region used for signing headers (sigv4).

                                    This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                    WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                  properties:
                                    name:
                                      default: us-east-1
                                      type: string
                                  type: object
                                tls:
                                  description: Use a TLS connection. If not specified no TLS will be used.
                                  nullable: true
                                  properties:
                                    verification:
                                      description: The verification method used to verify the certificates of the server and/or the client.
                                      oneOf:
                                        - required:
                                            - none
                                        - required:
                                            - server
                                      properties:
                                        none:
                                          description: Use TLS but don't verify certificates.
                                          type: object
                                        server:
                                          description: Use TLS and a CA certificate to verify the server.
                                          properties:
                                            caCert:
                                              description: CA cert to verify the server.
                                              oneOf:
                                                - required:
                                                    - webPki
                                                - required:
                                                    - secretClass
                                              properties:
                                                secretClass:
                                                  description: Name of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                  type: string
                                                webPki:
                                                  description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                  type: object
                                              type: object
                                          required:
                                            - caCert
                                          type: object
                                      type: object
                                  required:
                                    - verification
                                  type: object
                              required:
                                - host
                              type: object
                            reference:
                              type: string
                          type: object
                      required:
                        - metastore
                      type: object
                    iceberg:
                      description: An [Apache Iceberg](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/iceberg) connector.
                      properties:
                        hdfs:
                          description: Connection to an HDFS cluster. Please make sure that the underlying Hive metastore also has access to the HDFS.
                          nullable: true
                          properties:
                            configMap:
                              description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the HDFS cluster.
                              type: string
                          required:
                            - configMap
                          type: object
                        metastore:
                          description: Mandatory connection to a Hive Metastore, which will be used as a storage for metadata.
                          properties:
                            configMap:
                              description: Name of the [discovery ConfigMap](https://docs.stackable.tech/home/nightly/concepts/service_discovery) providing information about the Hive metastore.
                              type: string
                          required:
                            - configMap
                          type: object
                        s3:
                          description: Connection to an S3 store. Please make sure that the underlying Hive metastore also has access to the S3 store. Learn more about S3 configuration in the [S3 concept docs](https://docs.stackable.tech/home/nightly/concepts/s3).
                          nullable: true
                          oneOf:
                            - required:
                                - inline
                            - required:
                                - reference
                          properties:
                            inline:
                              description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/nightly/concepts/s3).
                              properties:
                                accessStyle:
                                  default: VirtualHosted
                                  description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                  enum:
                                    - Path
                                    - VirtualHosted
                                  type: string
                                credentials:
                                  description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                  nullable: true
                                  properties:
                                    scope:
                                      description: '[Scope](https://docs.stackable.tech/home/nightly/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass).'
                                      nullable: true
                                      properties:
                                        listenerVolumes:
                                          default: []
                                          description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                          items:
                                            type: string
                                          type: array
                                        node:
                                          default: false
                                          description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                          type: boolean
                                        pod:
                                          default: false
                                          description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                          type: boolean
                                        services:
                                          default: []
                                          description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    secretClass:
                                      description: '[SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) containing the LDAP bind credentials.'
                                      type: string
                                  required:
                                    - secretClass
                                  type: object
                                host:
                                  description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                  type: string
                                port:
                                  description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                  format: uint16
                                  minimum: 0.0
                                  nullable: true
                                  type: integer
                                region:
                                  default:
                                    name: us-east-1
                                  description: |-
                                    Bucket region used for signing headers (sigv4).

                                    This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                    WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                  properties:
                                    name:
                                      default: us-east-1
                                      type: string
                                  type: object
                                tls:
                                  description: Use a TLS connection. If not specified no TLS will be used.
                                  nullable: true
                                  properties:
                                    verification:
                                      description: The verification method used to verify the certificates of the server and/or the client.
                                      oneOf:
                                        - required:
                                            - none
                                        - required:
                                            - server
                                      properties:
                                        none:
                                          description: Use TLS but don't verify certificates.
                                          type: object
                                        server:
                                          description: Use TLS and a CA certificate to verify the server.
                                          properties:
                                            caCert:
                                              description: CA cert to verify the server.
                                              oneOf:
                                                - required:
                                                    - webPki
                                                - required:
                                                    - secretClass
                                              properties:
                                                secretClass:
                                                  description: Name of the [SecretClass](https://docs.stackable.tech/home/nightly/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                  type: string
                                                webPki:
                                                  description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                  type: object
                                              type: object
                                          required:
                                            - caCert
                                          type: object
                                      type: object
                                  required:
                                    - verification
                                  type: object
                              required:
                                - host
                              type: object
                            reference:
                              type: string
                          type: object
                      required:
                        - metastore
                      type: object
                    tpcds:
                      description: A [TPC-DS](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/tpcds) connector.
                      type: object
                    tpch:
                      description: A [TPC-H](https://docs.stackable.tech/home/nightly/trino/usage-guide/catalogs/tpch) connector.
                      type: object
                  type: object
                experimentalConfigRemovals:
                  default: []
                  description: |-
                    List of config properties which should be removed.

                    This is helpful, because Trino fails to start in case you have any unused config properties. The removals are executed after the `configOverrides`.

                    This field is experimental, and might be replaced by a more generic mechanism to edit config properties
                  items:
                    type: string
                  type: array
              required:
                - connector
              type: object
          required:
            - spec
          title: TrinoCatalog
          type: object
      served: true
      storage: true
      subresources: {}
